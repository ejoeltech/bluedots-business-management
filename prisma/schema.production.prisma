generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  customers Customer[]
  quotes    Quote[]
  invoices  Invoice[]
  receipts  Receipt[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Customer {
  id          Int        @id @default(autoincrement())
  name        String
  email       String?
  phone       String?
  address     String?
  userId      Int?
  user        User?      @relation(fields: [userId], references: [id])
  quotes      Quote[]
  invoices    Invoice[]
  reminders   Reminder[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Product {
  id        Int       @id @default(autoincrement())
  name      String
  type      String    // e.g. "Distilled Water", "Battery"
  stock     Int       @default(0)
  price     Float
  invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Quote {
  id          Int       @id @default(autoincrement())
  customerId  Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  total       Float
  status      String    @default("pending")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Invoice {
  id          Int       @id @default(autoincrement())
  customerId  Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  productId   Int?
  product     Product?  @relation(fields: [productId], references: [id])
  quantity    Int       @default(1)
  total       Float
  status      String    @default("unpaid")
  receipts    Receipt[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Receipt {
  id          Int       @id @default(autoincrement())
  invoiceId   Int
  invoice     Invoice   @relation(fields: [invoiceId], references: [id])
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  amount      Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Reminder {
  id          Int       @id @default(autoincrement())
  customerId  Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  product     String
  interval    Int       @default(90) // in days
  nextDue     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  ADMIN
  MANAGER
  USER
}

